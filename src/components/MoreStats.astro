---
export interface Props {
  traits?: string[];
  spells?: Array<{ name: string; level: number }>;
  tools?: string[];
}

const {
  traits = ["Midwestern Charm", "Dad Energy", "Code Whisperer"],
  spells = [
    { name: "React Mastery", level: 5 },
    { name: "TypeScript Fluency", level: 5 },
    { name: "System Design", level: 4 },
    { name: "Team Leadership", level: 4 },
  ],
  tools = ["VSCode", "Git", "Figma", "Linear", "Coffee"],
} = Astro.props;
---

<details class="more-stats">
  <summary>View Character Sheet</summary>
  <div class="stats-grid">
    <div class="stat-section">
      <h3>Traits</h3>
      <ul>
        {traits.map((trait) => <li>{trait}</li>)}
      </ul>
    </div>
    <div class="stat-section">
      <h3>Spells</h3>
      <ul>
        {
          spells.map((spell) => (
            <li>
              {spell.name}
              <span class="spell-level">
                {"★".repeat(spell.level)}
                <span class="empty-stars">{"☆".repeat(5 - spell.level)}</span>
              </span>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="stat-section">
      <h3>Tools</h3>
      <div class="tools">
        {tools.map((tool) => <span class="tool">{tool}</span>)}
      </div>
    </div>
  </div>
</details>

<style>
  .more-stats {
    margin-bottom: var(--spacing-phi-4);
    cursor: pointer;
  }

  summary {
    color: var(--color-sage-600);
    font-family: var(--font-mono);
    font-size: var(--font-size-sm);
    padding: var(--spacing-phi-2);
    transition: color 0.2s ease;
  }

  summary:hover {
    color: var(--color-sage-700);
  }

  summary::marker {
    color: var(--color-bark-400);
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: var(--spacing-phi-4);
    padding: var(--spacing-phi-4);
    background: var(--color-sage-50);
    border-radius: 0.25rem;
    margin-top: var(--spacing-phi-3);
  }

  .stat-section h3 {
    font-family: var(--font-mono);
    font-size: var(--font-size-xs);
    color: var(--color-bark-600);
    letter-spacing: 0.1em;
    margin-bottom: var(--spacing-phi-3);
    text-transform: uppercase;
  }

  .stat-section ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .stat-section li {
    color: var(--color-forest);
    padding: var(--spacing-phi-1) 0;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .spell-level {
    font-size: var(--font-size-sm);
    color: var(--color-flower-600);
  }

  .empty-stars {
    color: var(--color-bark-200);
  }

  .tools {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-phi-2);
  }

  .tool {
    background: var(--color-bark-100);
    color: var(--color-bark-700);
    padding: var(--spacing-phi-1) var(--spacing-phi-2);
    border-radius: 0.25rem;
    font-size: var(--font-size-sm);
    transition: all 0.2s ease;
  }

  .tool:hover {
    background: var(--color-bark-200);
    transform: translateY(-1px);
  }

  @media (max-width: 600px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }
  }
</style>