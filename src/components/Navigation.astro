---

---

<nav class="flex gap-phi-4" id="nav-container">
  <a
    href="/garden"
    data-key="1"
    data-page="garden"
    class="nav-link text-sm font-mono text-bark-600 dark:text-bark-400 hover:text-sage-600 dark:hover:text-sage-400 transition-colors whitespace-nowrap"
  >
    <span class="text-bark-400 dark:text-bark-600 mr-1">1:</span>garden
  </a>
  <a
    href="/seeds"
    data-key="2"
    data-page="seeds"
    class="nav-link text-sm font-mono text-bark-600 dark:text-bark-400 hover:text-sage-600 dark:hover:text-sage-400 transition-colors whitespace-nowrap"
  >
    <span class="text-bark-400 dark:text-bark-600 mr-1">2:</span>seeds
  </a>
  <a
    href="/lore"
    data-key="3"
    data-page="lore"
    class="nav-link text-sm font-mono text-bark-600 dark:text-bark-400 hover:text-sage-600 dark:hover:text-sage-400 transition-colors whitespace-nowrap"
  >
    <span class="text-bark-400 dark:text-bark-600 mr-1">3:</span>lore
  </a>
</nav>

<style>
  .nav-link.active {
    color: var(--color-sage-600);
  }

  .dark .nav-link.active {
    color: var(--color-sage-400);
  }

  .nav-link.highlight {
    background-color: var(--color-sage-100);
    transition: background-color 200ms ease-out;
  }

  .dark .nav-link.highlight {
    background-color: var(--color-sage-900);
  }
</style>

<script>
  const NAV_CONFIG = {
    keys: {
      home: "0",
      garden: "1",
      seeds: "2",
      lore: "3",
    },
    highlightDuration: 200,
  } as const;

  const navLinks = document.querySelectorAll(".nav-link");

  function setActiveLink() {
    const currentPath = window.location.pathname;

    navLinks.forEach((link) => {
      const href = link.getAttribute("href");
      const isActive = href && href !== "/" && currentPath.startsWith(href);
      link.classList.toggle("active", !!isActive);

      // Set aria-current for accessibility
      if (isActive) {
        link.setAttribute("aria-current", "page");
      } else {
        link.removeAttribute("aria-current");
      }
    });
  }

  function handleKeyboardNavigation(e: KeyboardEvent) {
    // Skip if any modifier keys are pressed
    if (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) return;

    const key = e.key;

    if (key === NAV_CONFIG.keys.home) {
      e.preventDefault();
      window.location.href = "/";
    } else if (key >= NAV_CONFIG.keys.garden && key <= NAV_CONFIG.keys.lore) {
      e.preventDefault();
      const link = document.querySelector(
        `[data-key="${key}"]`,
      ) as HTMLAnchorElement;

      if (link) {
        link.classList.add("highlight");
        requestAnimationFrame(() => {
          setTimeout(
            () => link.classList.remove("highlight"),
            NAV_CONFIG.highlightDuration,
          );
        });
        link.click();
      }
    }
  }

  document.addEventListener("keydown", handleKeyboardNavigation);

  setActiveLink();
</script>
