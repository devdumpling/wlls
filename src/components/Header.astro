---
import Brand from "./Brand.astro";
import Navigation from "./Navigation.astro";
---

<header class="fixed top-0 left-0 right-0 z-10 scroll-header" id="main-header">
  <div
    class="flex justify-between items-center px-phi-4 py-phi-3 bg-paper/80 dark:bg-paper-dark/80 backdrop-blur-sm"
    id="header-container"
  >
    <Brand />
    <Navigation />
  </div>
</header>

<style>
  .scroll-header {
    will-change: transform, backdrop-filter, background-color;
  }
</style>

<script>
  // Header scroll behavior with Anime.js
  import { animate } from "animejs";

  // Animation configurations
  const SCROLL_ANIMATIONS = {
    hide: {
      header: {
        translateY: "-100%",
        duration: 350,
        ease: "out(3)",
      },
      links: {
        opacity: 0,
        translateY: "-10px",
        duration: 200,
        delay: (_, i) => i * 40,
        ease: "out(2)",
      },
    },
    show: {
      header: {
        translateY: "0%",
        duration: 300,
        ease: "spring(1, 100, 10)",
      },
      links: {
        opacity: 1,
        translateY: "0px",
        duration: 200,
        delay: (_, i) => i * 30,
        ease: "out(2)",
      },
    },
  };

  // DOM elements
  const header = document.getElementById("main-header");

  if (header) {
    // State
    let lastScrollY = window.scrollY;
    let headerIsHidden = false;
    let headerIsAnimating = false;

    // Animation functions
    function hideHeader() {
      if (headerIsHidden || headerIsAnimating) return;
      headerIsHidden = true;
      headerIsAnimating = true;

      animate(header, {
        ...SCROLL_ANIMATIONS.hide.header,
        onComplete: () => {
          headerIsAnimating = false;
        },
      });

      // Get nav links from Navigation component
      const navLinks = document.querySelectorAll(".nav-link");
      if (navLinks.length > 0) {
        animate(navLinks, SCROLL_ANIMATIONS.hide.links);
      }
    }

    function showHeader() {
      if (!headerIsHidden || headerIsAnimating) return;
      headerIsHidden = false;
      headerIsAnimating = true;

      animate(header, {
        ...SCROLL_ANIMATIONS.show.header,
        onComplete: () => {
          headerIsAnimating = false;
        },
      });

      // Get nav links from Navigation component
      const navLinks = document.querySelectorAll(".nav-link");
      if (navLinks.length > 0) {
        animate(navLinks, SCROLL_ANIMATIONS.show.links);
      }
    }

    // Scroll handler
    let ticking = false;
    function handleScroll() {
      const currentScrollY = window.scrollY;
      const scrollDelta = currentScrollY - lastScrollY;

      if (currentScrollY > 200 && scrollDelta > 8) {
        hideHeader();
      } else if (scrollDelta < -8 || currentScrollY <= 100) {
        showHeader();
      }

      lastScrollY = currentScrollY;
      ticking = false;
    }

    // Initialize scroll listener
    window.addEventListener(
      "scroll",
      () => {
        if (!ticking) {
          requestAnimationFrame(handleScroll);
          ticking = true;
        }
      },
      { passive: true },
    );
  } // End header null check
</script>
